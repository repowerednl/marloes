name: Test CI

on:
  push:
    branches: [ "main", "dev"]
  pull_request:


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: "x64"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Debug Secrets
      run: |
        echo "PYPI URL: ${{ secrets.PRIVATE_PYPI_URL }}"
        echo "PRIVATE_PYPI_USER length: ${#PRIVATE_PYPI_USER}"
        echo "PRIVATE_PYPI_PASSWORD length: ${#PRIVATE_PYPI_PASSWORD}"

    - name: Configure Poetry
      run: |
        poetry config repositories.repowered ${{ secrets.PRIVATE_PYPI_URL}}
        poetry config http-basic.repowered ${{ secrets.PRIVATE_PYPI_USER }} ${{ secrets.PRIVATE_PYPI_PASSWORD}}

    - name: Load cached venv
      id: cached-pip-wheels
      uses: actions/cache@v3
      with:
        path: ~/.cache
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install Dependencies
      run: poetry install --no-interaction --no-root

    - name: Install root
      run: poetry install --no-interaction

    - name: Run Tests
      run: |
        poetry run --source='.'  -m pytest
